// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_default_Interact;
        
        private static SteamVR_Action_Pose p_default_PoseRightHand;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonRightHand;
        
        private static SteamVR_Action_Boolean p_default_HeadsetOnHead;
        
        private static SteamVR_Action_Pose p_default_PoseLeftHand;
        
        private static SteamVR_Action_Vector2 p_default_Move;
        
        private static SteamVR_Action_Vector2 p_default_Rotate;
        
        private static SteamVR_Action_Boolean p_default_Jog;
        
        private static SteamVR_Action_Boolean p_default_ToolPicker;
        
        private static SteamVR_Action_Boolean p_default_NextPage;
        
        private static SteamVR_Action_Boolean p_default_PreviousPage;
        
        private static SteamVR_Action_Boolean p_default_Cancel;
        
        private static SteamVR_Action_Boolean p_default_UIUp;
        
        private static SteamVR_Action_Boolean p_default_UIDown;
        
        private static SteamVR_Action_Boolean p_default_Recenter;
        
        private static SteamVR_Action_Boolean p_default_Grip;
        
        private static SteamVR_Action_Boolean p_default_SnapTurnRight;
        
        private static SteamVR_Action_Boolean p_default_SnapTurnLeft;
        
        private static SteamVR_Action_Boolean p_default_Teleport;
        
        private static SteamVR_Action_Boolean p_default_Radio;
        
        private static SteamVR_Action_Boolean p_default_StoreItem;
        
        private static SteamVR_Action_Boolean p_default_LocomotionAction;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        public static SteamVR_Action_Boolean default_Interact
        {
            get
            {
                return SteamVR_Actions.p_default_Interact.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_PoseRightHand
        {
            get
            {
                return SteamVR_Actions.p_default_PoseRightHand.GetCopy <SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonLeftHand.GetCopy <SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonRightHand.GetCopy <SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Boolean default_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_default_HeadsetOnHead.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_PoseLeftHand
        {
            get
            {
                return SteamVR_Actions.p_default_PoseLeftHand.GetCopy <SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_Move
        {
            get
            {
                return SteamVR_Actions.p_default_Move.GetCopy <SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_Rotate
        {
            get
            {
                return SteamVR_Actions.p_default_Rotate.GetCopy <SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Jog
        {
            get
            {
                return SteamVR_Actions.p_default_Jog.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_ToolPicker
        {
            get
            {
                return SteamVR_Actions.p_default_ToolPicker.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_NextPage
        {
            get
            {
                return SteamVR_Actions.p_default_NextPage.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_PreviousPage
        {
            get
            {
                return SteamVR_Actions.p_default_PreviousPage.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Cancel
        {
            get
            {
                return SteamVR_Actions.p_default_Cancel.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_UIUp
        {
            get
            {
                return SteamVR_Actions.p_default_UIUp.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_UIDown
        {
            get
            {
                return SteamVR_Actions.p_default_UIDown.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Recenter
        {
            get
            {
                return SteamVR_Actions.p_default_Recenter.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Grip
        {
            get
            {
                return SteamVR_Actions.p_default_Grip.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapTurnRight
        {
            get
            {
                return SteamVR_Actions.p_default_SnapTurnRight.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapTurnLeft
        {
            get
            {
                return SteamVR_Actions.p_default_SnapTurnLeft.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Teleport
        {
            get
            {
                return SteamVR_Actions.p_default_Teleport.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Radio
        {
            get
            {
                return SteamVR_Actions.p_default_Radio.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_StoreItem
        {
            get
            {
                return SteamVR_Actions.p_default_StoreItem.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_LocomotionAction
        {
            get
            {
                return SteamVR_Actions.p_default_LocomotionAction.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy <SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[]
            {
                    SteamVR_Actions.default_Interact,
                    SteamVR_Actions.default_PoseRightHand,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_PoseLeftHand,
                    SteamVR_Actions.default_Move,
                    SteamVR_Actions.default_Rotate,
                    SteamVR_Actions.default_Jog,
                    SteamVR_Actions.default_ToolPicker,
                    SteamVR_Actions.default_NextPage,
                    SteamVR_Actions.default_PreviousPage,
                    SteamVR_Actions.default_Cancel,
                    SteamVR_Actions.default_UIUp,
                    SteamVR_Actions.default_UIDown,
                    SteamVR_Actions.default_Recenter,
                    SteamVR_Actions.default_Grip,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_Radio,
                    SteamVR_Actions.default_StoreItem,
                    SteamVR_Actions.default_LocomotionAction,
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[]
            {
                    SteamVR_Actions.default_Interact,
                    SteamVR_Actions.default_PoseRightHand,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_PoseLeftHand,
                    SteamVR_Actions.default_Move,
                    SteamVR_Actions.default_Rotate,
                    SteamVR_Actions.default_Jog,
                    SteamVR_Actions.default_ToolPicker,
                    SteamVR_Actions.default_NextPage,
                    SteamVR_Actions.default_PreviousPage,
                    SteamVR_Actions.default_Cancel,
                    SteamVR_Actions.default_UIUp,
                    SteamVR_Actions.default_UIDown,
                    SteamVR_Actions.default_Recenter,
                    SteamVR_Actions.default_Grip,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_Radio,
                    SteamVR_Actions.default_StoreItem,
                    SteamVR_Actions.default_LocomotionAction};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[]
            {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[]
            {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[]
            {
                    SteamVR_Actions.default_PoseRightHand,
                    SteamVR_Actions.default_PoseLeftHand};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[]
            {
                    SteamVR_Actions.default_Interact,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_Jog,
                    SteamVR_Actions.default_ToolPicker,
                    SteamVR_Actions.default_NextPage,
                    SteamVR_Actions.default_PreviousPage,
                    SteamVR_Actions.default_Cancel,
                    SteamVR_Actions.default_UIUp,
                    SteamVR_Actions.default_UIDown,
                    SteamVR_Actions.default_Recenter,
                    SteamVR_Actions.default_Grip,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_Radio,
                    SteamVR_Actions.default_StoreItem,
                    SteamVR_Actions.default_LocomotionAction};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[0];
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[]
            {
                    SteamVR_Actions.default_Move,
                    SteamVR_Actions.default_Rotate};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[]
            {
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[]
            {
                    SteamVR_Actions.default_Interact,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_Move,
                    SteamVR_Actions.default_Rotate,
                    SteamVR_Actions.default_Jog,
                    SteamVR_Actions.default_ToolPicker,
                    SteamVR_Actions.default_NextPage,
                    SteamVR_Actions.default_PreviousPage,
                    SteamVR_Actions.default_Cancel,
                    SteamVR_Actions.default_UIUp,
                    SteamVR_Actions.default_UIDown,
                    SteamVR_Actions.default_Recenter,
                    SteamVR_Actions.default_Grip,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_Radio,
                    SteamVR_Actions.default_StoreItem,
                    SteamVR_Actions.default_LocomotionAction};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_Interact = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Interact")));
            SteamVR_Actions.p_default_PoseRightHand = ((SteamVR_Action_Pose)(SteamVR_Action.Create <SteamVR_Action_Pose>("/actions/default/in/PoseRightHand")));
            SteamVR_Actions.p_default_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create <SteamVR_Action_Skeleton>("/actions/default/in/SkeletonLeftHand")));
            SteamVR_Actions.p_default_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create <SteamVR_Action_Skeleton>("/actions/default/in/SkeletonRightHand")));
            SteamVR_Actions.p_default_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/HeadsetOnHead")));
            SteamVR_Actions.p_default_PoseLeftHand = ((SteamVR_Action_Pose)(SteamVR_Action.Create <SteamVR_Action_Pose>("/actions/default/in/PoseLeftHand")));
            SteamVR_Actions.p_default_Move = ((SteamVR_Action_Vector2)(SteamVR_Action.Create <SteamVR_Action_Vector2>("/actions/default/in/Move")));
            SteamVR_Actions.p_default_Rotate = ((SteamVR_Action_Vector2)(SteamVR_Action.Create <SteamVR_Action_Vector2>("/actions/default/in/Rotate")));
            SteamVR_Actions.p_default_Jog = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Jog")));
            SteamVR_Actions.p_default_ToolPicker = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/ToolPicker")));
            SteamVR_Actions.p_default_NextPage = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/NextPage")));
            SteamVR_Actions.p_default_PreviousPage = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/PreviousPage")));
            SteamVR_Actions.p_default_Cancel = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Cancel")));
            SteamVR_Actions.p_default_UIUp = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/UIUp")));
            SteamVR_Actions.p_default_UIDown = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/UIDown")));
            SteamVR_Actions.p_default_Recenter = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Recenter")));
            SteamVR_Actions.p_default_Grip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Grip")));
            SteamVR_Actions.p_default_SnapTurnRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/SnapTurnRight")));
            SteamVR_Actions.p_default_SnapTurnLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/SnapTurnLeft")));
            SteamVR_Actions.p_default_Teleport = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Teleport")));
            SteamVR_Actions.p_default_Radio = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Radio")));
            SteamVR_Actions.p_default_StoreItem = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/StoreItem")));
            SteamVR_Actions.p_default_LocomotionAction = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/LocomotionAction")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create <SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
        }
    }
}
